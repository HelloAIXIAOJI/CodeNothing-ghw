name: 构建CodeNothing解释器

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'library_*/**'
      - '**.md'
    tags:
      - 'v*'  # 添加标签触发
  pull_request:
    branches: [ main ]
    paths-ignore:
      - 'library_*/**'
      - '**.md'
  release:
    types: [created]  # 发布版本时触发
  workflow_dispatch:  # 允许手动触发

# 添加权限设置
permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: 构建解释器
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # 原有平台
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: codenothing-windows-x64
            asset_name: codenothing-windows-x64.zip
            release_name: Windows x64
            binary_name: codenothing.exe
            archive_cmd: 7z a ${{ matrix.asset_name }} ./release-package/*
          
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: codenothing-linux-x64
            asset_name: codenothing-linux-x64.tar.gz
            release_name: Linux x64
            binary_name: CodeNothing
            archive_cmd: tar -czvf ${{ matrix.asset_name }} -C release-package .
          
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: codenothing-macos-x64
            asset_name: codenothing-macos-x64.tar.gz
            release_name: macOS x64
            binary_name: CodeNothing
            archive_cmd: tar -czvf ${{ matrix.asset_name }} -C release-package .
          
          # 新增平台
          - os: ubuntu-latest
            target: aarch64-linux-android
            artifact_name: codenothing-android-arm64
            asset_name: codenothing-android-arm64.tar.gz
            release_name: Android ARM64
            binary_name: CodeNothing
            archive_cmd: tar -czvf ${{ matrix.asset_name }} -C release-package .
          
          - os: windows-latest
            target: i686-pc-windows-msvc
            artifact_name: codenothing-windows-x32
            asset_name: codenothing-windows-x32.zip
            release_name: Windows x32
            binary_name: codenothing.exe
            archive_cmd: 7z a ${{ matrix.asset_name }} ./release-package/*
          
          - os: windows-latest
            target: aarch64-pc-windows-msvc
            artifact_name: codenothing-windows-arm64
            asset_name: codenothing-windows-arm64.zip
            release_name: Windows ARM64
            binary_name: codenothing.exe
            archive_cmd: 7z a ${{ matrix.asset_name }} ./release-package/*
          
          - os: ubuntu-latest
            target: i686-unknown-linux-gnu
            artifact_name: codenothing-linux-x32
            asset_name: codenothing-linux-x32.tar.gz
            release_name: Linux x32
            binary_name: CodeNothing
            archive_cmd: tar -czvf ${{ matrix.asset_name }} -C release-package .
          
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact_name: codenothing-linux-arm64
            asset_name: codenothing-linux-arm64.tar.gz
            release_name: Linux ARM64
            binary_name: CodeNothing
            archive_cmd: tar -czvf ${{ matrix.asset_name }} -C release-package .
          
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: codenothing-macos-arm64
            asset_name: codenothing-macos-arm64.tar.gz
            release_name: macOS ARM64
            binary_name: CodeNothing
            archive_cmd: tar -czvf ${{ matrix.asset_name }} -C release-package .
          
          - os: ubuntu-latest
            target: armv7-unknown-linux-gnueabihf
            artifact_name: codenothing-linux-arm32
            asset_name: codenothing-linux-arm32.tar.gz
            release_name: Linux ARM32
            binary_name: CodeNothing
            archive_cmd: tar -czvf ${{ matrix.asset_name }} -C release-package .

    steps:
    - uses: actions/checkout@v3
    
    - name: 设置Rust工具链
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        target: ${{ matrix.target }}
    
    # 为Android目标安装Android NDK
    - name: 安装Android NDK (Android目标)
      if: contains(matrix.target, 'android')
      run: |
        sudo apt-get update
        sudo apt-get install -y android-ndk
        echo "ANDROID_NDK_HOME=/usr/lib/android-ndk" >> $GITHUB_ENV
      shell: bash
    
    # 为ARM目标安装交叉编译工具
    - name: 安装ARM交叉编译工具 (Linux ARM目标)
      if: contains(matrix.target, 'arm') && contains(matrix.target, 'linux') && !contains(matrix.target, 'android')
      run: |
        sudo apt-get update
        if [[ "${{ matrix.target }}" == "aarch64-unknown-linux-gnu" ]]; then
          sudo apt-get install -y gcc-aarch64-linux-gnu
        elif [[ "${{ matrix.target }}" == "armv7-unknown-linux-gnueabihf" ]]; then
          sudo apt-get install -y gcc-arm-linux-gnueabihf
        fi
      shell: bash
    
    - name: 构建
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release --target ${{ matrix.target }}
    
    - name: 创建输出目录
      run: mkdir -p release-package
      shell: bash
    
    - name: 复制可执行文件
      run: |
        cp target/${{ matrix.target }}/release/${{ matrix.binary_name }} release-package/
        # 如果examples目录存在，则复制
        if [ -d "examples" ]; then
          cp -r examples release-package/
        else
          echo "警告：examples目录不存在，跳过复制"
          # 创建一个空的examples目录，确保有内容
          mkdir -p release-package/examples
          echo "# CodeNothing 示例" > release-package/examples/README.md
        fi
      shell: bash
    
    - name: 打包
      run: ${{ matrix.archive_cmd }}
      shell: bash
    
    - name: 上传构建产物
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_name }}
        path: ${{ matrix.asset_name }}
    
    - name: 创建发布
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'release'
      with:
        files: ${{ matrix.asset_name }}
        tag_name: ${{ github.ref_name }}
        draft: false
        generate_release_notes: true 
