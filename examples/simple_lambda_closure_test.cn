using lib <io>;
using ns std;

// 简单Lambda函数闭包测试

fn main() : int {
    std::println("=== 简单Lambda函数闭包测试 ===");
    std::println("");
    
    // 测试1：基础闭包
    testBasicClosure();
    
    // 测试2：多变量闭包
    testMultiVariableClosure();
    
    std::println("");
    std::println("=== Lambda函数闭包测试完成 ===");
    return 0;
};

fn testBasicClosure() : void {
    std::println("1. 基础闭包测试");
    std::println("===============");
    
    // 外部变量
    multiplier : int = 3;
    
    // Lambda函数捕获外部变量
    multiply : *fn(int) : int = (x => x * multiplier);
    
    result1 : int = multiply(5);
    std::println("multiply(5) = " + result1 + " (应该是 15)");
    
    result2 : int = multiply(7);
    std::println("multiply(7) = " + result2 + " (应该是 21)");
    
    std::println("");
};

fn testMultiVariableClosure() : void {
    std::println("2. 多变量闭包测试");
    std::println("=================");
    
    // 多个外部变量
    base : int = 10;
    offset : int = 5;
    
    // Lambda函数捕获多个外部变量
    calculate : *fn(int) : int = (x => x + base + offset);
    
    result1 : int = calculate(3);
    std::println("calculate(3) = " + result1 + " (应该是 18)");
    
    result2 : int = calculate(7);
    std::println("calculate(7) = " + result2 + " (应该是 22)");
    
    std::println("");
};
