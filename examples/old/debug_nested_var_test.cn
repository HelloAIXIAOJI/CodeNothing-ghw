using lib <io>;
using ns std;

// 调试嵌套变量声明

// 带嵌套变量声明的函数
fn nestedVarFunction(a : int, b : int) : int {
    temp : int = a * 2;
    if (temp > b) {
        result : int = temp + b;
        return result;
    } else {
        return a + b;
    };
};

fn main() : int {
    std::println("=== 调试嵌套变量声明 ===");
    
    // 直接调用
    direct1 : int = nestedVarFunction(5, 3);
    std::println("直接调用: nestedVarFunction(5, 3) = " + direct1);
    
    direct2 : int = nestedVarFunction(2, 10);
    std::println("直接调用: nestedVarFunction(2, 10) = " + direct2);
    
    // 函数指针调用
    funcPtr : *fn(int, int) : int = nestedVarFunction;
    ptr1 : int = funcPtr(5, 3);
    std::println("函数指针: funcPtr(5, 3) = " + ptr1);
    
    ptr2 : int = funcPtr(2, 10);
    std::println("函数指针: funcPtr(2, 10) = " + ptr2);
    
    std::println("=== 测试完成 ===");
    return 0;
};
