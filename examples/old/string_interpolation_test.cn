using lib <io>;
using ns std;

fn main() : int {
    std::println("=== 字符串插值测试 ===");
    
    // 1. 简单变量插值
    name : string = "世界";
    greeting : string = `你好，${name}！`;
    std::println("简单变量插值:");
    std::println(greeting);
    
    // 2. 表达式插值
    a : int = 5;
    b : int = 3;
    result : string = `${a} + ${b} = ${a + b}`;
    std::println("表达式插值:");
    std::println(result);
    
    // 3. 函数调用插值
    std::println("函数调用插值:");
    std::println(`当前时间是：${getTimeString()}`);
    
    // 4. 嵌套插值
    c : int = 10;
    nested : string = `嵌套插值：${`内部值: ${c * 2}`}`;
    std::println("嵌套插值:");
    std::println(nested);
    
    // 5. 对象字段插值
    person_name : string = "张三";
    person_age : int = 30;
    std::println("对象字段插值 (使用单独变量):");
    std::println(`姓名: ${person_name}, 年龄: ${person_age}岁`);
    
    // 6. 条件插值
    score : int = 85;
    std::println("条件插值:");
    std::println(`成绩: ${score}, 等级: ${score >= 90 ? "优秀" : score >= 80 ? "良好" : score >= 60 ? "及格" : "不及格"}`);
    
    // 7. 多行插值
    multiline : string = `多行字符串
第一行：${a}
第二行：${b}
第三行：${a + b}`;
    std::println("多行插值:");
    std::println(multiline);
    
    std::println("=== 字符串插值测试完成 ===");
    return 0;
};

fn getTimeString() : string {
    return "2025-01-01 12:00:00";
}; 