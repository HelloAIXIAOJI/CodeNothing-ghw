using lib <io>;
using ns std;

// 函数指针赋值测试

fn addNumbers(a : int, b : int) : int {
    return a + b;
};

fn multiplyNumbers(a : int, b : int) : int {
    return a * b;
};

fn greet(name : string) : string {
    return "Hello, " + name + "!";
};

fn main() : int {
    std::println("=== CodeNothing 函数指针赋值测试 ===");
    
    // 测试函数指针赋值
    mathFunc : *fn(int, int) : int = addNumbers;
    std::println("mathFunc = addNumbers");
    std::println("函数指针: " + mathFunc.toString());
    std::println("函数名: " + mathFunc.getName());
    
    // 重新赋值
    mathFunc = multiplyNumbers;
    std::println("mathFunc = multiplyNumbers");
    std::println("函数指针: " + mathFunc.toString());
    std::println("函数名: " + mathFunc.getName());
    
    // 字符串函数指针
    stringFunc : *fn(string) : string = greet;
    std::println("stringFunc = greet");
    std::println("函数指针: " + stringFunc.toString());
    std::println("函数名: " + stringFunc.getName());
    
    std::println("");
    std::println("=== 函数指针赋值测试完成 ===");
    return 0;
};
