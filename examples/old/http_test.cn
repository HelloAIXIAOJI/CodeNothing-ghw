// 导入HTTP库和JSON库
using lib <http>;
using lib <json>;
using lib <io>;
using ns std;


fn main() : int {
    // 执行GET请求
    response : string = http::get("https://httpbin.org/get");
    println("GET请求结果:");
    println(response);
    
    // 执行POST请求
    post_response : string = http::post("https://httpbin.org/post", "hello=world");
    println("\nPOST请求结果:");
    println(post_response);
    
    // URL编码
    encoded : string = http::encode_url("测试 URL 编码");
    println("\nURL编码结果: " + encoded);
    
    // URL解码
    decoded : string = http::decode_url(encoded);
    println("URL解码结果: " + decoded);
    
    // 使用JSON库解析HTTP响应
    println("\n===== JSON库测试 =====");
    
    // 创建JSON对象
    json_obj : string = json::create_object("name", "张三", "age", "25", "city", "北京");
    println("\n创建的JSON对象:");
    println(json::format(json_obj));
    
    // 创建JSON数组
    json_arr : string = json::create_array("苹果", "香蕉", "橙子", "葡萄");
    println("\n创建的JSON数组:");
    println(json_arr);
    
    // 合并JSON对象
    address : string = json::create_object("country", "中国", "province", "北京");
    merged : string = json::merge(json_obj, address);
    println("\n合并后的JSON对象:");
    println(json::format(merged));
    
    // 测试从对象中提取值
    name_value : string = json::get_value(json_obj, "name");
    println("\n提取的name值:");
    println(name_value);
    
    // 测试检查JSON是否有效
    is_valid : string = json::is_valid(json_obj);
    println("\nJSON是否有效:");
    println(is_valid);
    
    return 0;
};