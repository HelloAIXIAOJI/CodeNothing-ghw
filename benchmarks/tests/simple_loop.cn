using lib <io>;
using ns std;

fn simpleWhileLoop(n : int) : int {
    sum : int = 0;
    i : int = 1;

    while (i <= n) {
        sum = sum + i;
        i = i + 1;
    };

    return sum;
};

fn simpleForLoop(n : int) : int {
    sum : int = 0;

    for (i : 1..n) {
        sum = sum + i;
    };

    return sum;
};

fn nestedLoop(n : int) : int {
    sum : int = 0;
    i : int = 1;

    while (i <= n) {
        j : int = 1;
        while (j <= n) {
            sum = sum + 1;
            j = j + 1;
        };
        i = i + 1;
    };

    return sum;
};

fn main() : int {
    std::println("=== 简单循环性能测试 ===");

    n : int = 1000;

    std::println("测试参数: n = " + n);
    std::println("");

    // while循环测试
    std::println("while循环测试:");
    whileResult : int = simpleWhileLoop(n);
    std::println("结果: " + whileResult);
    std::println("");

    // for循环测试
    std::println("for循环测试:");
    forResult : int = simpleForLoop(n);
    std::println("结果: " + forResult);
    std::println("");

    // 嵌套循环测试
    std::println("嵌套循环测试:");
    nestedResult : int = nestedLoop(50);
    std::println("结果: " + nestedResult);
    std::println("");

    std::println("=== 测试完成 ===");

    return 0;
};
