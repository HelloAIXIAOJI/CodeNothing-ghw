using lib <io>;
using ns std;

// CodeNothing 斐波那契数列性能测试
// 计算第25个斐波那契数

fn fibonacci(n : int) : long {
    if (n <= 1) {
        return n;
    };
    return fibonacci(n - 1) + fibonacci(n - 2);
};

fn iterativeFibonacci(n : int) : long {
    if (n <= 1) {
        return n;
    };
    
    a : long = 0;
    b : long = 1;
    i : int = 2;
    
    while (i <= n) {
        temp : long = a + b;
        a = b;
        b = temp;
        i = i + 1;
    };
    
    return b;
};

fn main() : int {
    std::println("=== CodeNothing 斐波那契数列性能测试 ===");
    
    // 测试参数
    n : int = 25;
    
    std::println("计算第 " + n + " 个斐波那契数");
    std::println("");
    
    // 递归版本测试
    std::println("递归版本:");
    result1 : long = fibonacci(n);
    std::println("fibonacci(" + n + ") = " + result1);
    std::println("");
    
    // 迭代版本测试
    std::println("迭代版本:");
    result2 : long = iterativeFibonacci(n);
    std::println("iterativeFibonacci(" + n + ") = " + result2);
    std::println("");
    
    // 验证结果一致性
    if (result1 == result2) {
        std::println("✓ 结果验证通过");
    } else {
        std::println("✗ 结果验证失败");
    };
    
    return 0;
};
