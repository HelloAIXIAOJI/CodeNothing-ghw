fn main() : int {
    // 测试各种命名空间函数调用
    
    // 调用全局函数
    global_result : int = calc(10, 5);
    
    // 调用数学命名空间函数
    math_add : int = math::add(10, 20);
    math_sub : int = math::subtract(30, 10);
    
    // 调用嵌套命名空间函数
    advanced_add : int = math::advanced::add(5, 15);
    advanced_mul : int = math::advanced::multiply(4, 8);
    
    // 调用多层嵌套命名空间函数
    deep_calc : int = utils::math::calc::complex(10, 5, 2);
    
    // 测试不同命名空间中的同名函数
    str_result : string = utils::format::format("Hello");
    num_result : string = utils::number::format(42);
    
    return deep_calc;
};

// 全局函数
fn calc(a : int, b : int) : int {
    return a + b;
};

// 数学命名空间
ns math {
    // 基本数学函数
    fn add(a : int, b : int) : int {
        return a + b;
    };
    
    fn subtract(a : int, b : int) : int {
        return a - b;
    };
    
    // 高级数学命名空间
    ns advanced {
        fn add(a : int, b : int) : int {
            return a + b;
        };
        
        fn multiply(a : int, b : int) : int {
            return a * b;
        };
    };
};

// 工具命名空间
ns utils {
    // 嵌套数学命名空间
    ns math {
        // 嵌套计算命名空间
        ns calc {
            fn complex(x : int, y : int, z : int) : int {
                return x * y + z;
            };
        };
    };
    
    // 格式化命名空间
    ns format {
        fn format(text : string) : string {
            return text + " (formatted)";
        };
    };
    
    // 数字格式化命名空间
    ns number {
        fn format(num : int) : string {
            return "Number: " + num;
        };
    };
}; 