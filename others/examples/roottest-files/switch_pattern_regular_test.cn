using lib <io>;

// 常规模式匹配测试 - 实际应用场景

fn gradeCalculator(score : int) : string {
    std::println("计算成绩等级");
    
    switch (score) {
        case 97..100 {
            std::println("A+等级");
            return "A+";
        };
        case 93..96 {
            std::println("A等级");
            return "A";
        };
        case 90..92 {
            std::println("A-等级");
            return "A-";
        };
        case 87..89 {
            std::println("B+等级");
            return "B+";
        };
        case 83..86 {
            std::println("B等级");
            return "B";
        };
        case 80..82 {
            std::println("B-等级");
            return "B-";
        };
        case 77..79 {
            std::println("C+等级");
            return "C+";
        };
        case 73..76 {
            std::println("C等级");
            return "C";
        };
        case 70..72 {
            std::println("C-等级");
            return "C-";
        };
        case 60..69 {
            std::println("D等级");
            return "D";
        };
        case x if x < 60 {
            std::println("F等级");
            return "F";
        };
        default {
            std::println("无效分数");
            return "Invalid";
        };
    };
};

fn processHttpStatus(code : int) : void {
    std::println("处理HTTP状态码");
    
    switch (code) {
        case 200..299 {
            std::println("成功响应");
            switch (code) {
                case 200 {
                    std::println("  OK");
                    break;
                };
                case 201 {
                    std::println("  Created");
                    break;
                };
                case 204 {
                    std::println("  No Content");
                    break;
                };
                default {
                    std::println("  其他成功状态");
                };
            };
            break;
        };
        case 300..399 {
            std::println("重定向");
            break;
        };
        case 400..499 {
            std::println("客户端错误");
            switch (code) {
                case 400 {
                    std::println("  Bad Request");
                    break;
                };
                case 401 {
                    std::println("  Unauthorized");
                    break;
                };
                case 403 {
                    std::println("  Forbidden");
                    break;
                };
                case 404 {
                    std::println("  Not Found");
                    break;
                };
                default {
                    std::println("  其他客户端错误");
                };
            };
            break;
        };
        case 500..599 {
            std::println("服务器错误");
            break;
        };
        default {
            std::println("未知状态码");
        };
    };
};

fn categorizeAge(age : int) : void {
    std::println("年龄分类");
    
    switch (age) {
        case x if x < 0 {
            std::println("无效年龄");
            break;
        };
        case 0..2 {
            std::println("婴儿");
            break;
        };
        case 3..5 {
            std::println("幼儿");
            break;
        };
        case 6..12 {
            std::println("儿童");
            break;
        };
        case 13..17 {
            std::println("青少年");
            break;
        };
        case 18..64 {
            std::println("成年人");
            break;
        };
        case x if x >= 65 {
            std::println("老年人");
            break;
        };
        default {
            std::println("未分类");
        };
    };
};

fn processTemperature(temp : float) : void {
    std::println("温度处理");
    
    switch (temp) {
        case t if t < 0.0 - 273.15 {
            std::println("低于绝对零度，无效温度");
            break;
        };
        case t if t >= 0.0 - 100.0 && t <= 0.0 - 1.0 {
            std::println("极寒");
            break;
        };
        case 0.0..10.0 {
            std::println("寒冷");
            break;
        };
        case 11.0..20.0 {
            std::println("凉爽");
            break;
        };
        case 21.0..30.0 {
            std::println("温暖");
            break;
        };
        case 31.0..40.0 {
            std::println("炎热");
            break;
        };
        case t if t > 40.0 {
            std::println("极热");
            break;
        };
        default {
            std::println("正常温度");
        };
    };
};

fn main() : int {
    std::println("Switch 模式匹配常规测试");
    std::println("");
    
    // 测试成绩计算
    std::println("1. 成绩等级测试:");
    score1 : int = 95;
    score2 : int = 88;
    score3 : int = 76;
    score4 : int = 65;
    score5 : int = 45;
    
    grade1 : string = gradeCalculator(score1);
    std::println("成绩等级结果");
    grade2 : string = gradeCalculator(score2);
    std::println("成绩等级结果");
    grade3 : string = gradeCalculator(score3);
    std::println("成绩等级结果");
    grade4 : string = gradeCalculator(score4);
    std::println("成绩等级结果");
    grade5 : string = gradeCalculator(score5);
    std::println("成绩等级结果");
    std::println("");
    
    // 测试HTTP状态码
    std::println("2. HTTP状态码测试:");
    processHttpStatus(200);
    processHttpStatus(404);
    processHttpStatus(500);
    processHttpStatus(301);
    processHttpStatus(401);
    std::println("");
    
    // 测试年龄分类
    std::println("3. 年龄分类测试:");
    categorizeAge(2);
    categorizeAge(8);
    categorizeAge(16);
    categorizeAge(25);
    categorizeAge(70);
    std::println("");
    
    // 测试温度处理
    std::println("4. 温度处理测试:");
    processTemperature(0.0 - 50.0);
    processTemperature(5.0);
    processTemperature(25.0);
    processTemperature(35.0);
    processTemperature(50.0);
    std::println("");
    
    std::println("常规测试完成");
    return 0;
};