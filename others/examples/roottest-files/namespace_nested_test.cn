// 测试嵌套命名空间

// 导入库命名空间
using lib <io>;
using ns std;

// 创建父命名空间
ns parent {
    // 创建子命名空间
    ns child {
        fn hello() : string {
            return "来自嵌套命名空间的问候！";
        };
        
        fn add(a : int, b : int) : int {
            return a + b;
        };
    };
    
    // 父命名空间中的函数
    fn say_hello() : string {
        return "来自父命名空间的问候！";
    };
};

// 定义另一个命名空间，与父命名空间同级
ns utils {
    fn get_version() : string {
        return "1.0.0";
    };
};

fn main() : int {
    // 使用库命名空间
    println("测试嵌套命名空间");
    
    // 导入并使用嵌套命名空间
    using ns parent::child;
    greeting : string = hello();
    println(greeting);
    
    // 导入父命名空间
    using ns parent;
    parent_greeting : string = say_hello();
    println(parent_greeting);
    
    // 使用完整路径访问嵌套命名空间函数
    sum : int = parent::child::add(30, 40);
    println("30 + 40 = " + sum);
    
    // 导入并使用另一个命名空间
    using ns utils;
    println("版本: " + get_version());
    
    return 0;
}; 