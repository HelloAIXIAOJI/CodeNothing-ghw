using lib <io>;
using ns std;

// 逐步调试复杂函数

// 第一步：带局部变量的函数
fn stepOne(a : int, b : int) : int {
    temp : int = a * 2;
    return temp;
};

// 第二步：带局部变量和简单if的函数
fn stepTwo(a : int, b : int) : int {
    temp : int = a * 2;
    if (temp >= 10) {
        return temp;
    } else {
        return b;
    };
};

fn main() : int {
    std::println("=== 逐步调试复杂函数 ===");
    
    // 测试第一步
    std::println("测试第一步：带局部变量");
    step1Ptr : *fn(int, int) : int = stepOne;
    result1 : int = step1Ptr(5, 3);
    std::println("step1Ptr(5, 3) = " + result1);
    
    // 测试第二步
    std::println("测试第二步：带局部变量和if");
    step2Ptr : *fn(int, int) : int = stepTwo;
    result2 : int = step2Ptr(5, 3);
    std::println("step2Ptr(5, 3) = " + result2);
    
    result3 : int = step2Ptr(2, 3);
    std::println("step2Ptr(2, 3) = " + result3);
    
    std::println("=== 测试完成 ===");
    return 0;
};
