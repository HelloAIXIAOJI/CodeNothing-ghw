// 🚀 v0.6.2 内存管理器读写锁测试
using lib <io>;
using ns std;

fn main() : int {
    std::println("🚀 v0.6.2 内存管理器读写锁测试");
    
    // 测试指针操作（这些应该使用内存管理器）
    std::println("=== 测试1: 指针分配和读取 ===");
    
    // 分配指针（写操作）
    value1 : int = 100;
    ptr1 : *int = &value1;
    
    value2 : string = "hello";
    ptr2 : *string = &value2;
    
    value3 : bool = true;
    ptr3 : *bool = &value3;
    
    std::println("✅ 指针分配完成");
    
    // 读取指针值（读操作）
    std::println("=== 测试2: 指针解引用（读操作） ===");
    
    deref1 : int = *ptr1;
    deref2 : string = *ptr2;
    deref3 : bool = *ptr3;
    
    if (deref1 == 100) {
        std::println("✓ 指针1解引用成功");
    };
    
    if (deref2 == "hello") {
        std::println("✓ 指针2解引用成功");
    };
    
    if (deref3) {
        std::println("✓ 指针3解引用成功");
    };
    
    std::println("✅ 指针读取完成");
    
    // 测试多次读取（应该使用读锁）
    std::println("=== 测试3: 多次读取操作 ===");
    
    i : int = 0;
    while (i < 5) {
        temp1 : int = *ptr1;
        temp2 : string = *ptr2;
        temp3 : bool = *ptr3;
        
        if (temp1 > 0 && temp3) {
            std::println("读取循环", i, "完成");
        };
        
        i = i + 1;
    };
    
    std::println("✅ 多次读取完成");
    
    std::println("🎉 内存管理器测试完成！");
    
    return 0;
};
